{"remainingRequest":"C:\\Users\\Deft\\Desktop\\medimi\\medimi-office\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Deft\\Desktop\\medimi\\medimi-office\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Deft\\Desktop\\medimi\\medimi-office\\src\\store\\modules\\appointment.js","dependencies":[{"path":"C:\\Users\\Deft\\Desktop\\medimi\\medimi-office\\src\\store\\modules\\appointment.js","mtime":1629903216329},{"path":"C:\\Users\\Deft\\Desktop\\medimi\\medimi-office\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Deft\\Desktop\\medimi\\medimi-office\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Deft\\Desktop\\medimi\\medimi-office\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL0RlZnQvRGVza3RvcC9tZWRpbWkvbWVkaW1pLW9mZmljZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCB7IGlzRW1wdHkgfSBmcm9tICJsb2Rhc2giOyAvLyBpbXBvcnQgbG9jYWxmb3JhZ2UgZnJvbSAnbG9jYWxmb3JhZ2UnCgppbXBvcnQgYXBpIGZyb20gIi4uLy4uL3NlcnZpY2VzL2FwaSI7CnZhciBzdGF0ZSA9IHsKICBib2R5OiBudWxsLAogIGlkOiBudWxsCn07CnZhciBtdXRhdGlvbnMgPSB7CiAgU0VUX0JPRFk6IGZ1bmN0aW9uIFNFVF9CT0RZKHN0YXRlLCBwYXlsb2FkKSB7CiAgICBzdGF0ZS5ib2R5ID0gcGF5bG9hZDsKICB9LAogIFNFVF9JRDogZnVuY3Rpb24gU0VUX0lEKHN0YXRlLCBwYXlsb2FkKSB7CiAgICBzdGF0ZS5pZCA9IHBheWxvYWQ7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IHsKICBhZGRBcHBvaW50bWVudDogZnVuY3Rpb24gYWRkQXBwb2ludG1lbnQoX3JlZiwgcGF5bG9hZCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIHN0YXRlLCBjb21taXQsIHJlc3VsdDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIHN0YXRlID0gX3JlZi5zdGF0ZSwgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgICAgY29tbWl0KCJTRVRfQk9EWSIsIHBheWxvYWQpOwogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAyOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgIHJldHVybiBhcGkucG9zdCgnL2FwcG9pbnRtZW50LycsIHN0YXRlLmJvZHkpOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIHJlc3VsdCA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgIGlmIChyZXN1bHQpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA4OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBQcm9taXNlLnJlamVjdCgiRXJyb3IgaW4gYWRkaW5nIGFwcG9pbnRtZW50IikpOwoKICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIFByb21pc2UucmVzb2x2ZShyZXN1bHQuZGF0YS5yZXN1bHQpKTsKCiAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDExOwogICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMik7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQudDApOwoKICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1syLCAxMV1dKTsKICAgIH0pKSgpOwogIH0sCiAgZ2V0QXBwb2ludG1lbnRSYW5nZTogZnVuY3Rpb24gZ2V0QXBwb2ludG1lbnRSYW5nZShfcmVmMiwgcGF5bG9hZCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHZhciBzdGF0ZSwgY29tbWl0LCByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBzdGF0ZSA9IF9yZWYyLnN0YXRlLCBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxOwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNDsKICAgICAgICAgICAgICByZXR1cm4gYXBpLmdldCgiYXBwb2ludG1lbnQvcmFuZ2UvIi5jb25jYXQocGF5bG9hZC5pZCwgIi8iKS5jb25jYXQocGF5bG9hZC5zdGFydCwgIi8iKS5jb25jYXQocGF5bG9hZC5lbmQpKTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Mi5zZW50OwoKICAgICAgICAgICAgICBpZiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNzsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIFByb21pc2UucmVqZWN0KCJFcnJvciBpbiBnZXR0aW5nIGFwcG9pbnRtZW50IikpOwoKICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBQcm9taXNlLnJlc29sdmUocmVzcG9uc2UuZGF0YS5yZXN1bHQpKTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxMDsKICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIFByb21pc2UucmVqZWN0KF9jb250ZXh0Mi50MCkpOwoKICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzEsIDEwXV0pOwogICAgfSkpKCk7CiAgfSwKICBnZXRBcHBvaW50bWVudHNCeURlcGFydG1lbnQ6IGZ1bmN0aW9uIGdldEFwcG9pbnRtZW50c0J5RGVwYXJ0bWVudChfcmVmMywgcGF5bG9hZCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgIHZhciBzdGF0ZSwgY29tbWl0LCByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBzdGF0ZSA9IF9yZWYzLnN0YXRlLCBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSAxOwogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNDsKICAgICAgICAgICAgICByZXR1cm4gYXBpLmdldCgiL2FwcG9pbnRtZW50L2RlcGFydG1lbnQvIi5jb25jYXQocGF5bG9hZC5pZCkpOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQzLnNlbnQ7CgogICAgICAgICAgICAgIGlmIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA3OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgUHJvbWlzZS5yZWplY3QoIkVycm9yIGluIGdldHRpbmcgYXBwb2ludG1lbnQiKSk7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIFByb21pc2UucmVzb2x2ZShyZXNwb25zZS5kYXRhLnJlc3VsdCkpOwoKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDEwOwogICAgICAgICAgICAgIF9jb250ZXh0My50MCA9IF9jb250ZXh0M1siY2F0Y2giXSgxKTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQzLnQwKTsKCiAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMywgbnVsbCwgW1sxLCAxMF1dKTsKICAgIH0pKSgpOwogIH0sCiAgZ2V0QXBwb2ludG1lbnQ6IGZ1bmN0aW9uIGdldEFwcG9pbnRtZW50KF9yZWY0LCBwYXlsb2FkKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgdmFyIHN0YXRlLCBjb21taXQsIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIHN0YXRlID0gX3JlZjQuc3RhdGUsIGNvbW1pdCA9IF9yZWY0LmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dDQucHJldiA9IDE7CiAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA0OwogICAgICAgICAgICAgIHJldHVybiBhcGkuZ2V0KCIvYXBwb2ludG1lbnQvIi5jb25jYXQocGF5bG9hZC5pZCkpOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQ0LnNlbnQ7CgogICAgICAgICAgICAgIGlmIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA3OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgicmV0dXJuIiwgUHJvbWlzZS5yZWplY3QoIkVycm9yIGluIGdldHRpbmcgYXBwb2ludG1lbnQiKSk7CgogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5hYnJ1cHQoInJldHVybiIsIFByb21pc2UucmVzb2x2ZShyZXNwb25zZS5kYXRhLnJlc3VsdCkpOwoKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBfY29udGV4dDQucHJldiA9IDEwOwogICAgICAgICAgICAgIF9jb250ZXh0NC50MCA9IF9jb250ZXh0NFsiY2F0Y2giXSgxKTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQ0LnQwKTsKCiAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlNCwgbnVsbCwgW1sxLCAxMF1dKTsKICAgIH0pKSgpOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHN0YXRlLAogIG11dGF0aW9uczogbXV0YXRpb25zLAogIGFjdGlvbnM6IGFjdGlvbnMKfTs="},{"version":3,"sources":["C:/Users/Deft/Desktop/medimi/medimi-office/src/store/modules/appointment.js"],"names":["isEmpty","api","state","body","id","mutations","SET_BODY","payload","SET_ID","actions","addAppointment","commit","post","result","Promise","reject","resolve","data","getAppointmentRange","get","start","end","response","getAppointmentsByDepartment","getAppointment","namespaced"],"mappings":"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","sourcesContent":["import { isEmpty } from \"lodash\";\r\n// import localforage from 'localforage'\r\nimport api from \"../../services/api\";\r\n\r\nconst state = {\r\n  body: null,\r\n  id: null\r\n};\r\n\r\nconst mutations = {\r\n  SET_BODY(state, payload) {\r\n    state.body = payload;\r\n  },\r\n\r\n  SET_ID(state, payload) {\r\n    state.id = payload;\r\n  },\r\n\r\n};\r\n\r\nconst actions = {\r\n\r\n\r\n  async addAppointment({ state, commit }, payload) {\r\n    commit(\"SET_BODY\", payload);\r\n    try {\r\n      const result = await api.post('/appointment/', state.body)\r\n      if(!result) return Promise.reject(\"Error in adding appointment\")\r\n      return Promise.resolve(result.data.result)\r\n    } catch (error) {\r\n      return error\r\n    }\r\n  },\r\n\r\n  async getAppointmentRange({ state, commit }, payload) {\r\n    try {\r\n      const response = await api.get(`appointment/range/${payload.id}/${payload.start}/${payload.end}`)\r\n      if(!response) return Promise.reject(\"Error in getting appointment\")\r\n      return Promise.resolve(response.data.result)\r\n    } catch (error) {\r\n      return Promise.reject(error)\r\n    }\r\n  },\r\n  \r\n  async getAppointmentsByDepartment({ state, commit }, payload) {\r\n    try {\r\n      const response = await api.get(`/appointment/department/${payload.id}`)\r\n      if(!response) return Promise.reject(\"Error in getting appointment\")\r\n      return Promise.resolve(response.data.result)\r\n    } catch (error) {\r\n      return error\r\n    }\r\n  },\r\n\r\n  async getAppointment({ state, commit }, payload) {\r\n    try {\r\n      const response = await api.get(`/appointment/${payload.id}`)\r\n      if(!response) return Promise.reject(\"Error in getting appointment\")\r\n      return Promise.resolve(response.data.result)\r\n    } catch (error) {\r\n      return error\r\n    }\r\n  },\r\n\r\n\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  mutations,\r\n  actions,\r\n};\r\n"]}]}