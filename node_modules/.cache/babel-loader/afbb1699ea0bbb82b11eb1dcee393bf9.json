{"remainingRequest":"C:\\Users\\Deft\\Desktop\\medimi\\medimi-office\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Deft\\Desktop\\medimi\\medimi-office\\src\\store\\modules\\patient.js","dependencies":[{"path":"C:\\Users\\Deft\\Desktop\\medimi\\medimi-office\\src\\store\\modules\\patient.js","mtime":1629381293666},{"path":"C:\\Users\\Deft\\Desktop\\medimi\\medimi-office\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Deft\\Desktop\\medimi\\medimi-office\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL0RlZnQvRGVza3RvcC9tZWRpbWkvbWVkaW1pLW9mZmljZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCB7IGlzRW1wdHkgfSBmcm9tICJsb2Rhc2giOyAvLyBpbXBvcnQgbG9jYWxmb3JhZ2UgZnJvbSAnbG9jYWxmb3JhZ2UnCgppbXBvcnQgYXBpIGZyb20gIi4uLy4uL3NlcnZpY2VzL2FwaSI7CnZhciBzdGF0ZSA9IHsKICBib2R5OiBudWxsCn07CnZhciBtdXRhdGlvbnMgPSB7CiAgU0VUX0JPRFk6IGZ1bmN0aW9uIFNFVF9CT0RZKHN0YXRlLCBwYXlsb2FkKSB7CiAgICBzdGF0ZS5ib2R5ID0gcGF5bG9hZDsKICB9Cn07CnZhciBhY3Rpb25zID0gewogIGFkZFBhdGllbnRCeVN0YWZmOiBmdW5jdGlvbiBhZGRQYXRpZW50QnlTdGFmZihfcmVmLCBwYXlsb2FkKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgc3RhdGUsIGNvbW1pdCwgcmVzdWx0OwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgc3RhdGUgPSBfcmVmLnN0YXRlLCBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgICBjb21taXQoIlNFVF9CT0RZIiwgcGF5bG9hZCk7CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDI7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgcmV0dXJuIGFwaS5wb3N0KCcvcGF0aWVudC9hZGRQYXRpZW50QnlTdGFmZicsIHN0YXRlLmJvZHkpOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIHJlc3VsdCA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgIGlmIChyZXN1bHQpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA4OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBQcm9taXNlLnJlamVjdCgiRXJyb3IgaW4gYWRkaW5nIFBhdGllbnQiKSk7CgogICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgUHJvbWlzZS5yZXNvbHZlKHJlc3VsdC5kYXRhLnJlc3VsdCkpOwoKICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTE7CiAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgyKTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dC50MCk7CgogICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzIsIDExXV0pOwogICAgfSkpKCk7CiAgfQp9OwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogc3RhdGUsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMsCiAgYWN0aW9uczogYWN0aW9ucwp9Ow=="},{"version":3,"sources":["C:/Users/Deft/Desktop/medimi/medimi-office/src/store/modules/patient.js"],"names":["isEmpty","api","state","body","mutations","SET_BODY","payload","actions","addPatientByStaff","commit","post","result","Promise","reject","resolve","data","namespaced"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,QAAxB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE;AADM,CAAd;AAIA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,QADgB,oBACPH,KADO,EACAI,OADA,EACS;AACvBJ,IAAAA,KAAK,CAACC,IAAN,GAAaG,OAAb;AACD;AAHe,CAAlB;AAOA,IAAMC,OAAO,GAAG;AAGRC,EAAAA,iBAHQ,mCAG6BF,OAH7B,EAGsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1BJ,cAAAA,KAA0B,QAA1BA,KAA0B,EAAnBO,MAAmB,QAAnBA,MAAmB;AAClDA,cAAAA,MAAM,CAAC,UAAD,EAAaH,OAAb,CAAN;AADkD;AAAA;AAAA,qBAG3BL,GAAG,CAACS,IAAJ,CAAS,4BAAT,EAAuCR,KAAK,CAACC,IAA7C,CAH2B;;AAAA;AAG1CQ,cAAAA,MAH0C;;AAAA,kBAI5CA,MAJ4C;AAAA;AAAA;AAAA;;AAAA,+CAI7BC,OAAO,CAACC,MAAR,CAAe,yBAAf,CAJ6B;;AAAA;AAAA,+CAKzCD,OAAO,CAACE,OAAR,CAAgBH,MAAM,CAACI,IAAP,CAAYJ,MAA5B,CALyC;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASnD;AAZa,CAAhB;AAmBA,eAAe;AACbK,EAAAA,UAAU,EAAE,IADC;AAEbd,EAAAA,KAAK,EAALA,KAFa;AAGbE,EAAAA,SAAS,EAATA,SAHa;AAIbG,EAAAA,OAAO,EAAPA;AAJa,CAAf","sourcesContent":["import { isEmpty } from \"lodash\";\r\n// import localforage from 'localforage'\r\nimport api from \"../../services/api\";\r\n\r\nconst state = {\r\n  body: null\r\n};\r\n\r\nconst mutations = {\r\n  SET_BODY(state, payload) {\r\n    state.body = payload;\r\n  },\r\n\r\n};\r\n\r\nconst actions = {\r\n\r\n\r\n  async addPatientByStaff({ state, commit }, payload) {\r\n    commit(\"SET_BODY\", payload);\r\n    try {\r\n      const result = await api.post('/patient/addPatientByStaff', state.body)\r\n      if(!result) return Promise.reject(\"Error in adding Patient\")\r\n      return Promise.resolve(result.data.result)\r\n    } catch (error) {\r\n      return error\r\n    }\r\n  },\r\n\r\n\r\n\r\n\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  mutations,\r\n  actions,\r\n};\r\n"]}]}