{"remainingRequest":"C:\\Users\\Deft\\Desktop\\medimi\\medimi-office\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Deft\\Desktop\\medimi\\medimi-office\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Deft\\Desktop\\medimi\\medimi-office\\src\\store\\modules\\hospital.js","dependencies":[{"path":"C:\\Users\\Deft\\Desktop\\medimi\\medimi-office\\src\\store\\modules\\hospital.js","mtime":1629033657508},{"path":"C:\\Users\\Deft\\Desktop\\medimi\\medimi-office\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Deft\\Desktop\\medimi\\medimi-office\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Deft\\Desktop\\medimi\\medimi-office\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL0RlZnQvRGVza3RvcC9tZWRpbWkvbWVkaW1pLW9mZmljZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCB7IGlzRW1wdHkgfSBmcm9tICJsb2Rhc2giOyAvLyBpbXBvcnQgbG9jYWxmb3JhZ2UgZnJvbSAnbG9jYWxmb3JhZ2UnCgppbXBvcnQgYXBpIGZyb20gIi4uLy4uL3NlcnZpY2VzL2FwaSI7CnZhciBzdGF0ZSA9IHsKICBob3NwaXRhbDogbnVsbAp9Owp2YXIgbXV0YXRpb25zID0gewogIFNFVF9IT1NQSVRBTDogZnVuY3Rpb24gU0VUX0hPU1BJVEFMKHN0YXRlLCBwYXlsb2FkKSB7CiAgICBzdGF0ZS5ob3NwaXRhbCA9IHBheWxvYWQ7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IHsKICBnZXRIb3NwaXRhbDogZnVuY3Rpb24gZ2V0SG9zcGl0YWwoX3JlZikgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIHN0YXRlLCBjb21taXQsIHJvb3RTdGF0ZSwgaG9zcGl0YWw7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBzdGF0ZSA9IF9yZWYuc3RhdGUsIGNvbW1pdCA9IF9yZWYuY29tbWl0LCByb290U3RhdGUgPSBfcmVmLnJvb3RTdGF0ZTsKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICByZXR1cm4gYXBpLmdldCgiL2hvc3BpdGFsLyIuY29uY2F0KHJvb3RTdGF0ZS5hdXRoLmxvZ2dlZEluVXNlci5ob3NwaXRhbElkKSk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgaG9zcGl0YWwgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICBpZiAoaG9zcGl0YWwpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBQcm9taXNlLnJlamVjdCgiRXJyb3IgaW4gZ2V0dGluZyBob3NwaXRhbCBEYXRhIikpOwoKICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIGNvbW1pdCgiU0VUX0hPU1BJVEFMIiwgaG9zcGl0YWwuZGF0YS5yZXN1bHQpOwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIFByb21pc2UucmVzb2x2ZShkYXRhKSk7CgogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMTsKICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMSwgMTFdXSk7CiAgICB9KSkoKTsKICB9Cn07CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiBzdGF0ZSwKICBtdXRhdGlvbnM6IG11dGF0aW9ucywKICBhY3Rpb25zOiBhY3Rpb25zCn07"},{"version":3,"sources":["C:/Users/Deft/Desktop/medimi/medimi-office/src/store/modules/hospital.js"],"names":["isEmpty","api","state","hospital","mutations","SET_HOSPITAL","payload","actions","getHospital","commit","rootState","get","auth","loggedInUser","hospitalId","Promise","reject","data","result","resolve","namespaced"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,QAAxB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,QAAQ,EAAE;AADE,CAAd;AAIA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,YADgB,wBACHH,KADG,EACII,OADJ,EACa;AAC3BJ,IAAAA,KAAK,CAACC,QAAN,GAAiBG,OAAjB;AACD;AAHe,CAAlB;AAMA,IAAMC,OAAO,GAAG;AAGRC,EAAAA,WAHQ,6BAGkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA5BN,cAAAA,KAA4B,QAA5BA,KAA4B,EAArBO,MAAqB,QAArBA,MAAqB,EAAbC,SAAa,QAAbA,SAAa;AAAA;AAAA;AAAA,qBAErBT,GAAG,CAACU,GAAJ,qBAAqBD,SAAS,CAACE,IAAV,CAAeC,YAAf,CAA4BC,UAAjD,EAFqB;;AAAA;AAEtCX,cAAAA,QAFsC;;AAAA,kBAGxCA,QAHwC;AAAA;AAAA;AAAA;;AAAA,+CAGvBY,OAAO,CAACC,MAAR,CAAe,gCAAf,CAHuB;;AAAA;AAI5CP,cAAAA,MAAM,CAAC,cAAD,EAAiBN,QAAQ,CAACc,IAAT,CAAcC,MAA/B,CAAN;AAJ4C,+CAKrCH,OAAO,CAACI,OAAR,CAAgBF,IAAhB,CALqC;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAS/C;AAZa,CAAhB;AAiBA,eAAe;AACbG,EAAAA,UAAU,EAAE,IADC;AAEblB,EAAAA,KAAK,EAALA,KAFa;AAGbE,EAAAA,SAAS,EAATA,SAHa;AAIbG,EAAAA,OAAO,EAAPA;AAJa,CAAf","sourcesContent":["import { isEmpty } from \"lodash\";\r\n// import localforage from 'localforage'\r\nimport api from \"../../services/api\";\r\n\r\nconst state = {\r\n  hospital: null\r\n};\r\n\r\nconst mutations = {\r\n  SET_HOSPITAL(state, payload) {\r\n    state.hospital = payload\r\n  }\r\n};\r\n\r\nconst actions = {\r\n\r\n\r\n  async getHospital({ state, commit, rootState }) {\r\n    try {\r\n      const hospital = await api.get(`/hospital/${rootState.auth.loggedInUser.hospitalId}`)\r\n      if(!hospital) return Promise.reject(\"Error in getting hospital Data\")\r\n      commit(\"SET_HOSPITAL\", hospital.data.result)\r\n      return Promise.resolve(data)\r\n    } catch (error) {\r\n      return error\r\n    }\r\n  },\r\n\r\n\r\n};\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  mutations,\r\n  actions,\r\n};\r\n"]}]}